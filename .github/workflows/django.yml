name: Unit tests & full coverage

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-24.04

    # service containers to run with `Django CI`
    services:
      # label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # service environment variables
        # `POSTGRES_HOST` is `postgres`
        env:
          # optional (defaults to `postgres`)
          # POSTGRES_DB: postgres_db
          # required
          POSTGRES_PASSWORD: travis
          POSTGRES_PORT: 5432
          # optional (defaults to `postgres`)
          POSTGRES_USER: postgres
        ports:
          # maps tcp port 5432 on service container to the host
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


      # Oracle service (label used to access the service container)
      oracle:
        # Docker Hub image (feel free to change the tag "latest" to any other available one)
        image: gvenzl/oracle-xe:11-slim
        # Provide passwords and other environment variables to container
        env:
          ORACLE_PASSWORD: travis

          # Forward Oracle port
        ports:
          - 1521:1521

        # Provide healthcheck script options for startup
        options: >-
          --health-cmd healthcheck.sh
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10


    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install libaio1 (libaio1t64 in Ubuntu 24.04)
      run: |
        sudo apt update
        sudo apt install libaio1t64
        sudo ln -s /usr/lib/x86_64-linux-gnu/libaio.so.1t64 /usr/lib/x86_64-linux-gnu/libaio.so.1

    - name: Install pip Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Installing DES into home
      run : |
        ./install_des.sh

    - name: Installing Oracle Instant Client
      run: |
        ./install_oracle_instant_client.sh

    - name: Set LD_LIBRARY_PATH variable for InstantClient
      run: |
        echo ${{ env.LD_LIBRARY_PATH }}
        echo "LD_LIBRARY_PATH=${{ env.LD_LIBRARY_PATH }}:/tmp/instantclient" >> $GITHUB_ENV

    - name: Execute Django tests and coverage
      run: |
        ./tests_ci.sh
      env:
        ORACLE_SID: XE
        ORACLE_MAX_GESTOR_CONNECTIONS: 20
        ORACLE_GESTOR_POOL_TIMEOUT_MS: 20000
        ORACLE_STMT_TIMEOUT_MS: 1500
        ORACLE_SERVER: localhost
        ORACLE_PORT: 1521
        ORACLE_TABLESPACE: USERS
        ORACLE_USER: SYSTEM
        ORACLE_PASS: travis
        ORACLE_MAX_COLS: 20
        ORACLE_MAX_ROWS: 1000
        ORACLE_MAX_TABLES: 20
        PG_USER: postgres
        PG_PASS: travis
        PG_SERVER: localhost
        PG_PORT: 5432
        PG_DB: postgres
        DJANGO_DEVELOPMENT: true
        DES_BIN: ${{ github.workspace }}/des/des_start
        DES_TIMEOUT: 5

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
